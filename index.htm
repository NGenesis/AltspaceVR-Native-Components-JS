<html>
	<head>
		<title>AltspaceVR Native Components in JS</title>
		<script type="text/javascript" src="https://cdn.rawgit.com/mrdoob/three.js/dev/build/three.js"></script>
		<script type="text/javascript" src="https://sdk.altvr.com/libs/altspace.js/0.25.0/altspace.min.js"></script>
		<script type="text/javascript" src="js/JSNativeComponents.js"></script>
		<script>
			var JSNCExamplesApp = (function() {
				var scene = new THREE.Scene();
				var renderer = altspace.getThreeJSRenderer();
				var root = new THREE.Object3D();

				var testText;
				var testBoxCollider;

				scene.add(root);

				function init() {

					altspace.getEnclosure().then(function(enc) {
						console.log('Enclosure Data:', enc);
						root.scale.multiplyScalar(enc.pixelsPerMeter);
						
						enc.requestFullspace().then(function() {
							loadAssets();
						});
					});

				}

				function loadAssets() {
					
					//n-text
					testText = new NativeComponent('n-text', {
						fontSize: 10,
						horizontalAlign: 'middle',
					}).addTo(root);
					
					
					//n-sphere-collider
					var geometry = new THREE.SphereGeometry(3, 20, 20);
					var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
					var testSphere = new THREE.Mesh(geometry, material);
					testSphere.position.set(-10, 0, 10);

					var testSphereCollider = new NativeComponent('n-sphere-collider', {radius: 3}, testSphere).addTo(root);
					
					//n-box-collider
					var geometry = new THREE.BoxGeometry(5, 5, 5);
					var material = new THREE.MeshBasicMaterial({ color: 0xff0000 });
					var testBox = new THREE.Mesh(geometry, material);
					testBox.position.set(-10, 0, 0);

					testBoxCollider = new NativeComponent('n-box-collider', {radius: 1}, testBox).addTo(root);
					
					//n-spawner
					var testSpawner = new NativeComponent('n-spawner').addTo(root, function(obj){
						obj.position.set(5, 0, 0);
					});
					
					//n-object (effects)
					var geometry = new THREE.BoxGeometry(1, 1, 1);
					var material = new THREE.MeshBasicMaterial({ color: 0x0000ff });
					var exBox = new THREE.Mesh(geometry, material);
					exBox.position.set(0, 5, 0);
					root.add(exBox);
					
					exBox.addEventListener('cursorup', function() {
						var explosion = new NativeComponent('n-object', {
							res: 'effects/explosion'
						}).addTo(exBox);
						setTimeout(function() { 
							explosion.remove();
							explosion = null;
						}, 5000);
					});
					
					
					//n-billboard
					var geometry = new THREE.PlaneGeometry(5, 5);
					var material = new THREE.MeshBasicMaterial({ color: 0xffff00 });
					var testPlane = new THREE.Mesh(geometry, material);
					testPlane.position.set(-10, 0, 20);
					
					var testBillboard = new NativeComponent('n-billboard', null, testPlane).addTo(root);
					
					animate();
				}

				function animate() {

					var epochtime = (new Date).getTime();

					testText.update({ text: String(epochtime) }, function(obj) {
						obj.rotation.y += 0.001;
					});

					testBoxCollider.getObject(function(obj) {
						obj.rotation.y += 0.002;
					});

					requestAnimationFrame(animate);
					renderer.render(scene);
				}

				return { init: init };
			}());
			
			window.onload = function() {
				JSNCExamplesApp.init();	
			}
		</script>
	</head>
	<body>

	</body>
</html>
